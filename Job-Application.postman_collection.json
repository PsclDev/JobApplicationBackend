{
  "info": {
    "_postman_id": "20f2e5e0-1e8b-42d5-99d8-88d577177d71",
    "name": "Job-Application",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "6729620"
  },
  "item": [
    {
      "name": "Health",
      "item": [
        {
          "name": "Check",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "query {\n  healthCheck {\n      version\n      databaseRunning\n  }\n}",
                "variables": ""
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": ["{{base_url}}"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Group",
      "item": [
        {
          "name": "All",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "query {\n    groups {\n        id\n        name\n        description\n        applications {\n            id\n            name\n        }\n        isArchived\n        createdAt\n        updatedAt\n    }\n}",
                "variables": ""
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": ["{{base_url}}"]
            }
          },
          "response": []
        },
        {
          "name": "By Id",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "query($id: String!) {\n    group(id: $id) {\n        id\n        name\n        description\n        applications {\n            id\n            name\n        }\n        isArchived\n        createdAt\n        updatedAt\n    }\n}",
                "variables": "{\n    \"id\": \"{{group_id}}\"\n}"
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": ["{{base_url}}"]
            }
          },
          "response": []
        },
        {
          "name": "Create",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.collectionVariables.set(\"group_id\", jsonData.data.createGroup.id);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "mutation {\n    createGroup(\n        input: {\n            name:\"Software Engineering Group\"\n            description: \"test description\"\n            isArchived: false\n        }\n    ) {\n        id\n    }\n}",
                "variables": ""
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": ["{{base_url}}"]
            }
          },
          "response": []
        },
        {
          "name": "Update",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "mutation($id: String!) {\n    updateGroup(\n        id: $id\n        input: {\n            name:\"Software Development\"\n            isArchived: true\n        }\n    ) {\n        id\n        name\n        isArchived\n    }\n}",
                "variables": "{\n    \"id\": \"{{group_id}}\"\n}"
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": ["{{base_url}}"]
            }
          },
          "response": []
        },
        {
          "name": "Archive",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "mutation($id: String!) {\n    archiveGroup(\n        id: $id\n    )\n}",
                "variables": "{\n    \"id\": \"{{group_id}}\"\n}"
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": ["{{base_url}}"]
            }
          },
          "response": []
        },
        {
          "name": "Unarchive",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "mutation($id: String!) {\n    unarchiveGroup(\n        id: $id\n    )\n}",
                "variables": "{\n    \"id\": \"{{group_id}}\"\n}"
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": ["{{base_url}}"]
            }
          },
          "response": []
        },
        {
          "name": "Delete",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "mutation($id: String!) {\n    deleteGroup(\n        id: $id\n    )\n}",
                "variables": "{\n    \"id\": \"{{group_id}}\"\n}"
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": ["{{base_url}}"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Application",
      "item": [
        {
          "name": "All",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "query {\n    applications {\n        id\n        groupId\n        name\n        description\n        company\n        contact {\n            name\n            position\n            email\n        }\n        jobUrl\n        status {\n            state\n            date\n        }\n        meetings {\n            title\n            date\n            attendees {\n                name\n                position\n                email\n            }\n        }\n        notes\n        files {\n            groupId\n            applicationId\n            name\n            extension\n            data\n            size\n            mime\n        }\n        isArchived\n    }\n}",
                "variables": ""
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": ["{{base_url}}"]
            }
          },
          "response": []
        },
        {
          "name": "By Id",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "query($id: String!) {\n    application(id: $id) {\n        id\n        groupId\n        name\n        description\n        company\n        contact {\n            name\n            position\n            email\n        }\n        jobUrl\n        status {\n            state\n            date\n        }\n        meetings {\n            title\n            date\n            attendees {\n                name\n                position\n                email\n            }\n        }\n        notes\n        files {\n            groupId\n            applicationId\n            name\n            extension\n            data\n            size\n            mime\n        }\n        isArchived\n    }\n}",
                "variables": "{\n    \"id\": \"{{application_id}}\"\n}"
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": ["{{base_url}}"]
            }
          },
          "response": []
        },
        {
          "name": "By Group Id",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "query($groupId: String!) {\n    applicationsByGroupId(groupId: $groupId) {\n        id\n        groupId\n        name\n        description\n        company\n        contact {\n            name\n            position\n            email\n        }\n        jobUrl\n        status {\n            state\n            date\n        }\n        meetings {\n            title\n            date\n            attendees {\n                name\n                position\n                email\n            }\n        }\n        notes\n        files {\n            groupId\n            applicationId\n            name\n            extension\n            data\n            size\n            mime\n        }\n        isArchived\n    }\n}",
                "variables": "{\n    \"groupId\": \"{{group_id}}\"\n}"
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": ["{{base_url}}"]
            }
          },
          "response": []
        },
        {
          "name": "Create",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.collectionVariables.set(\"application_id\", jsonData.data.createApplication.id);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "mutation($groupId: String!) {\n    createApplication(\n        input: {\n            groupId: $groupId\n            name: \"Junior Engineer\"\n            description: \"test description\"\n            company: \"Apple Inc.\"\n            notes: \"\"\n            contact: {\n                name: \"John Doe\"\n                position: \"HR\"\n                email: \"hr@apple.com\"\n            }\n            jobUrl: \"https://apple.com/\"\n            status: {\n                state: \"PENDING\"\n                date: \"2022-08-17\"\n            }\n            isArchived: false\n        }\n    ) {\n        id\n        groupId\n        name\n        description\n        company\n        contact {\n            name\n            position\n            email\n        }\n        jobUrl\n        status {\n            state\n            date\n        }\n        meetings {\n            title\n            date\n            attendees {\n                name\n                position\n                email\n            }\n        }\n        notes\n        files {\n            name\n            size\n            mime\n        }\n        isArchived\n    }\n}",
                "variables": "{\n    \"groupId\": \"{{group_id}}\"\n}"
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": ["{{base_url}}"]
            }
          },
          "response": []
        },
        {
          "name": "Update",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "mutation($id: String!) {\n    updateApplication(\n        id: $id\n        input: {\n            name:\"Senior Engineer Updated\",\n            status: {\n                state: \"INTERVIEW\"\n                date: \"2022-08-17\"\n            }\n        }\n    ) {\n        id\n        groupId\n        name\n        description\n        company\n        contact {\n            name\n            position\n            email\n        }\n        jobUrl\n        status {\n            state\n            date\n        }\n        meetings {\n            title\n            date\n            attendees {\n                name\n                position\n                email\n            }\n        }\n        notes\n        files {\n            groupId\n            applicationId\n            name\n            extension\n            data\n            size\n            mime\n        }\n        isArchived\n    }\n}",
                "variables": "{\n    \"id\": \"{{application_id}}\"\n}"
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": ["{{base_url}}"]
            }
          },
          "response": []
        },
        {
          "name": "Move to new group",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "mutation($id: String!, $groupId: String!) {\n    moveApplication(\n        id: $id\n        newGroupId: $groupId\n    ) {\n        id\n        groupId\n        name\n        description\n        company\n        contact {\n            name\n            position\n            email\n        }\n        jobUrl\n        status {\n            state\n            date\n        }\n        meetings {\n            title\n            date\n            attendees {\n                name\n                position\n                email\n            }\n        }\n        notes\n        files {\n            groupId\n            applicationId\n            name\n            extension\n            data\n            size\n            mime\n        }\n        isArchived\n    }\n}",
                "variables": "{\n    \"id\": \"{{application_id}}\",\n    \"groupId\": \"{{group_id}}\"\n}"
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": ["{{base_url}}"]
            }
          },
          "response": []
        },
        {
          "name": "Archive",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "mutation($id: String!) {\n    archiveApplication(\n        id: $id\n    )\n}",
                "variables": "{\n    \"id\": \"{{application_id}}\"\n}"
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": ["{{base_url}}"]
            }
          },
          "response": []
        },
        {
          "name": "Unarchive",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "mutation($id: String!) {\n    unarchiveApplication(\n        id: $id\n    )\n}",
                "variables": "{\n    \"id\": \"{{application_id}}\"\n}"
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": ["{{base_url}}"]
            }
          },
          "response": []
        },
        {
          "name": "Delete",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "mutation($id: String!) {\n    deleteApplication(\n        id: $id\n    )\n}",
                "variables": "{\n    \"id\": \"{{application_id}}\"\n}"
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": ["{{base_url}}"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Meeting",
      "item": [
        {
          "name": "All",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "query {\n    meetings {\n        id\n        applicationId\n        title\n        date\n        link\n        attendees {\n            name\n            position\n            email\n        }\n        notes\n    }\n}",
                "variables": ""
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": ["{{base_url}}"]
            }
          },
          "response": []
        },
        {
          "name": "By Application Id",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "query($applicationId: String!) {\n    meetingsByApplicationId(applicationId: $applicationId) {\n        id\n        applicationId\n        title\n        link\n        attendees {\n            name\n            position\n            email\n        }\n        notes   \n    }\n}",
                "variables": "{\n    \"applicationId\": \"{{application_id}}\"\n}"
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": ["{{base_url}}"]
            }
          },
          "response": []
        },
        {
          "name": "By Id",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "query($id: String!) {\n    meeting(id: $id) {\n        id\n        applicationId\n        title\n        link\n        attendees {\n            name\n            position\n            email\n        }\n        notes\n    }\n}",
                "variables": "{\n    \"id\": \"{{meeting_id}}\"\n}"
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": ["{{base_url}}"]
            }
          },
          "response": []
        },
        {
          "name": "Create",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.collectionVariables.set(\"meeting_id\", jsonData.data.createMeeting.id);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "mutation($applicationId: String!) {\n    createMeeting(\n        input: {\n            applicationId: $applicationId\n            title:\"Cool Meeting\"\n            date: \"2022-09-27T15:45:00Z\"\n            attendees: [{\n                name: \"Hans Jürgen\"\n                position: \"CEO\"\n                email: \"seher@hansi.com\"\n            },\n            {\n                name: \"Hannelore Peters\"\n                position: \"HR\"\n                email: \"lore@hanne.com\"\n            }]\n            link: \"https://google.com\"\n        }\n    ) {\n        id\n        applicationId\n        title\n        date\n        link\n        attendees {\n            name\n            position\n            email\n        }\n        notes    \n    }\n}",
                "variables": "{\n    \"applicationId\": \"{{application_id}}\"\n}"
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": ["{{base_url}}"]
            }
          },
          "response": []
        },
        {
          "name": "Update",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "mutation($id: String!) {\n    updateMeeting(\n        id: $id\n        input: {\n            title:\"New Meeting Title\",\n        }\n    ) {\n        id\n        applicationId\n        title\n        link\n        attendees {\n            name\n            position\n            email\n        }\n        notes   \n    }\n}",
                "variables": "{\n    \"id\": \"{{meeting_id}}\"\n}"
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": ["{{base_url}}"]
            }
          },
          "response": []
        },
        {
          "name": "Delete",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "mutation($id: String!) {\n    deleteMeeting(\n        id: $id\n    )\n}",
                "variables": "{\n    \"id\": \"{{meeting_id}}\"\n}"
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": ["{{base_url}}"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Status",
      "item": [
        {
          "name": "Update Status",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "mutation($id: String!) {\n    updateStatus(\n        id: $id\n        input: {\n            state: \"REJECTED\"\n            date: \"2022-08-18\"\n        }\n    )\n}",
                "variables": "{\n    \"id\": \"{{application_id}}\"\n}"
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": ["{{base_url}}"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "File",
      "item": [
        {
          "name": "Options",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "query {\n    fileOptions {\n        allowedExtensions\n        maxSize\n    }\n}",
                "variables": ""
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": ["{{base_url}}"]
            }
          },
          "response": []
        },
        {
          "name": "All",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "query {\n    files {\n        id\n        groupId\n        applicationId\n        name\n        extension\n        size\n        mime\n    }\n}",
                "variables": ""
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": ["{{base_url}}"]
            }
          },
          "response": []
        },
        {
          "name": "By Id",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "query($id: String!) {\n    file(id: $id) {\n        id\n        groupId\n        applicationId\n        name\n        extension\n        size\n        mime\n        data\n    }\n}",
                "variables": "{\n    \"id\": \"{{file_id}}\"\n}"
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": ["{{base_url}}"]
            }
          },
          "response": []
        },
        {
          "name": "Serve",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "query($id: String!) {\n    serveFile(id: $id)\n}",
                "variables": "{\n    \"id\": \"{{global_file_id}}\"\n}"
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": ["{{base_url}}"]
            }
          },
          "response": []
        },
        {
          "name": "Application Upload",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.collectionVariables.set(\"application_file_id\", jsonData.data.uploadFile.id);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "operations",
                  "value": "{\n    \"query\": \"mutation ($applicationId: String!, $file: Upload!) { uploadFile(input: { applicationId: $applicationId },  file: $file) { id groupId applicationId name extension data size mime createdAt updatedAt}}\",\n    \"variables\": {\n    \"applicationId\": \"{{application_id}}\",\n    \"file\": null\n    }\n}",
                  "type": "text"
                },
                {
                  "key": "map",
                  "value": "{\n    \"0\": [\n        \"variables.file\"\n    ]\n}",
                  "type": "text"
                },
                {
                  "key": "0",
                  "type": "file",
                  "src": []
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}",
              "host": ["{{base_url}}"]
            }
          },
          "response": []
        },
        {
          "name": "Group Upload",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.collectionVariables.set(\"group_file_id\", jsonData.data.uploadFile.id);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "operations",
                  "value": "{\n    \"query\": \"mutation ($groupId: String!, $file: Upload!) { uploadFile(input: {groupId: $groupId },  file: $file) { id groupId applicationId name extension data size mime createdAt updatedAt}}\",\n    \"variables\": {\n    \"groupId\": \"{{group_id}}\",\n    \"file\": null\n    }\n}",
                  "type": "text"
                },
                {
                  "key": "map",
                  "value": "{\n    \"0\": [\n        \"variables.file\"\n    ]\n}",
                  "type": "text"
                },
                {
                  "key": "0",
                  "type": "file",
                  "src": []
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}",
              "host": ["{{base_url}}"]
            }
          },
          "response": []
        },
        {
          "name": "Global Upload",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.collectionVariables.set(\"global_file_id\", jsonData.data.uploadFile.id);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "operations",
                  "value": "{\n    \"query\": \"mutation ($file: Upload!) { uploadFile(input: {} file: $file) { id groupId applicationId name extension data size mime createdAt updatedAt}}\",\n    \"variables\": {\n    \"file\": null\n    }\n}",
                  "type": "text"
                },
                {
                  "key": "map",
                  "value": "{\n    \"0\": [\n        \"variables.file\"\n    ]\n}",
                  "type": "text"
                },
                {
                  "key": "0",
                  "type": "file",
                  "src": []
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}",
              "host": ["{{base_url}}"]
            }
          },
          "response": []
        },
        {
          "name": "Delete",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "mutation($id: String!) {\n    deleteFile(\n        id: $id\n    )\n}",
                "variables": "{\n    \"id\": \"{{global_file_id}}\"\n}"
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": ["{{base_url}}"]
            }
          },
          "response": []
        },
        {
          "name": "Update",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "graphql",
              "graphql": {
                "query": "mutation($id: String!) {\n    updateFile(\n        id: $id\n        input: {\n            name:\"New File Name\",\n        }\n    ) {\n        id\n        groupId\n        applicationId\n        name\n        extension\n        size\n        mime\n        data \n    }\n}",
                "variables": "{\n    \"id\": \"{{global_file_id}}\"\n}"
              }
            },
            "url": {
              "raw": "{{base_url}}",
              "host": ["{{base_url}}"]
            }
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3010/graphql",
      "type": "string"
    },
    {
      "key": "group_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "application_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "meeting_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "application_file_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "group_file_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "global_file_id",
      "value": "",
      "type": "string"
    }
  ]
}
